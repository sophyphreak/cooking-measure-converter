{"version":3,"file":"static/webpack/static/development/pages/index.js.c9c3157631a122c75d6e.hot-update.js","sources":["webpack:///./containers/MeasureConverter/MeasureConverter.js"],"sourcesContent":["import React from 'react';\nimport ConverterComponent from '../../components/ConverterComponent/ConverterComponent';\nimport getInitialStateMethods from './getInitialStateMethods/getInitialStateMethods';\nimport massUnitOptions from './unitOptions/massOptions';\nimport volumeUnitOptions from './unitOptions/volumeOptions';\nimport lengthUnitOptions from './unitOptions/lengthOptions';\nimport convertImperialMassToMetric from './converters/massConverters/convertImperialMassToMetric';\nimport convertMetricMassToImperial from './converters/massConverters/convertMetricMassToImperial';\nimport convertImperialVolumeToMetric from './converters/volumeConverters/convertImperialVolumeToMetric';\nimport convertMetricVolumeToImperial from './converters/volumeConverters/convertMetricVolumeToImperial';\nimport convertImperialLengthToMetric from './converters/lengthConverters/convertImperialLengthToMetric';\nimport convertMetricLengthToImperial from './converters/lengthConverters/convertMetricLengthToImperial';\nimport convertImperialTemperatureToMetric from './converters/temperatureConverters/convertImperialTemperatureToMetric';\nimport convertMetricTemperatureToImperial from './converters/temperatureConverters/convertMetricTemperatureToImperial';\n\n// TODO\n//\n// - Try again to get rid of the bind(this) statements\n\nexport default class MeasureConverter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      massState: {\n        imperialMass: '',\n        imperialUnit: '',\n        metricMass: '',\n        metricUnit: ''\n      },\n      volumeState: {\n        imperialVolume: '',\n        imperialUnit: '',\n        metricVolume: '',\n        metricUnit: ''\n      },\n      lengthState: {\n        imperialLength: '',\n        imperialUnit: '',\n        metricLength: '',\n        metricUnit: ''\n      },\n      temperatureState: {\n        imperialTemperature: '',\n        metricTemperature: ''\n      }\n    };\n    this.onImperialMassChange = this.onImperialMassChange.bind(this);\n    this.onMetricMassChange = this.onMetricMassChange.bind(this);\n    this.onImperialVolumeChange = this.onImperialVolumeChange.bind(this);\n    this.onMetricVolumeChange = this.onMetricVolumeChange.bind(this);\n    this.onImperialLengthChange = this.onImperialLengthChange.bind(this);\n    this.onMetricLengthChange = this.onMetricLengthChange.bind(this);\n    this.onImperialTemperatureChange = this.onImperialTemperatureChange.bind(\n      this\n    );\n    this.onMetricTemperatureChange = this.onMetricTemperatureChange.bind(this);\n  }\n\n  componentDidMount() {\n    const getInitial = getInitialStateMethods();\n    this.setState(() => ({\n      massState: {\n        imperialUnit: getInitial.massImperialUnit(),\n        metricUnit: getInitial.massMetricUnit()\n      },\n      volumeState: {\n        imperialUnit: getInitial.volumeImperialUnit(),\n        metricUnit: getInitial.volumeMetricUnit()\n      },\n      lengthState: {\n        imperialUnit: getInitial.lengthImperialUnit(),\n        metricUnit: getInitial.lengthMetricUnit()\n      }\n    }))\n  }\n\n  componentDidUpdate() {\n    const local = this.state;\n    localStorage.setItem('local', JSON.stringify(local));\n  }\n\n  onImperialMassChange({ event, newUnit }) {\n    let massState = this.state.massState;\n    const conversionInputs = {\n      massState,\n      event,\n      newUnit\n    };\n    massState = convertImperialMassToMetric(conversionInputs);\n    this.setState(() => ({ massState }));\n  }\n\n  onMetricMassChange({ event, newUnit }) {\n    let massState = this.state.massState;\n    const conversionInputs = {\n      massState,\n      event,\n      newUnit\n    };\n    massState = convertMetricMassToImperial(conversionInputs);\n    this.setState(() => ({ massState }));\n  }\n\n  onImperialVolumeChange({ event, newUnit }) {\n    let volumeState = this.state.volumeState;\n    const conversionInputs = {\n      volumeState,\n      event,\n      newUnit\n    };\n    volumeState = convertImperialVolumeToMetric(conversionInputs);\n    this.setState(() => ({ volumeState }));\n  }\n\n  onMetricVolumeChange({ event, newUnit }) {\n    let volumeState = this.state.volumeState;\n    const conversionInputs = {\n      volumeState,\n      event,\n      newUnit\n    };\n    volumeState = convertMetricVolumeToImperial(conversionInputs);\n    this.setState(() => ({ volumeState }));\n  }\n\n  onImperialLengthChange({ event, newUnit }) {\n    let lengthState = this.state.lengthState;\n    const conversionInputs = {\n      lengthState,\n      event,\n      newUnit\n    };\n    lengthState = convertImperialLengthToMetric(conversionInputs);\n    this.setState(() => ({ lengthState }));\n  }\n\n  onMetricLengthChange({ event, newUnit }) {\n    let lengthState = this.state.lengthState;\n    const conversionInputs = {\n      lengthState,\n      event,\n      newUnit\n    };\n    lengthState = convertMetricLengthToImperial(conversionInputs);\n    this.setState(() => ({ lengthState }));\n  }\n\n  onImperialTemperatureChange({ event }) {\n    let temperatureState = this.state.temperatureState;\n    const conversionInputs = {\n      temperatureState,\n      event\n    };\n    temperatureState = convertImperialTemperatureToMetric(conversionInputs);\n    this.setState(() => ({ temperatureState }));\n  }\n\n  onMetricTemperatureChange({ event }) {\n    let temperatureState = this.state.temperatureState;\n    const conversionInputs = {\n      temperatureState,\n      event\n    };\n    temperatureState = convertMetricTemperatureToImperial(conversionInputs);\n    this.setState(() => ({ temperatureState }));\n  }\n\n  render() {\n    const massProps = {\n      massState: this.state.massState,\n      onImperialMassChange: this.onImperialMassChange,\n      onMetricMassChange: this.onMetricMassChange,\n      massUnitOptions: massUnitOptions\n    };\n    const volumeProps = {\n      volumeState: this.state.volumeState,\n      onImperialVolumeChange: this.onImperialVolumeChange,\n      onMetricVolumeChange: this.onMetricVolumeChange,\n      volumeUnitOptions: volumeUnitOptions\n    };\n    const lengthProps = {\n      lengthState: this.state.lengthState,\n      onImperialLengthChange: this.onImperialLengthChange,\n      onMetricLengthChange: this.onMetricLengthChange,\n      lengthUnitOptions: lengthUnitOptions\n    };\n    const temperatureProps = {\n      temperatureState: this.state.temperatureState,\n      onImperialTemperatureChange: this.onImperialTemperatureChange,\n      onMetricTemperatureChange: this.onMetricTemperatureChange\n    };\n    return (\n      <ConverterComponent\n        massProps={massProps}\n        volumeProps={volumeProps}\n        lengthProps={lengthProps}\n        temperatureProps={temperatureProps}\n      />\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAnBA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAnCA;AAoCA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AAAA;AAcA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAJA;AAOA;;;;AApLA;AACA;;;;;A","sourceRoot":""}